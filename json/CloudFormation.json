{"Resources":{"Stack":{"Name":"AWS::CloudFormation::Stack","Properties":{"NotificationARNs":{"Description":"A list of existing Amazon SNS topics where notifications about stack events are                                 sent.","Array":true,"Type":"String","Required":"No","UpdateRequires":"No interruption"},"Parameters":{"Description":"The set of parameters passed to AWS CloudFormation when this nested stack is created.NoteIf you use the Ref function to pass a parameter value to a                                    nested stack, comma-delimited list parameters must be of type                                    String. In other words, you cannot pass values that are of type                                    CommaDelimitedList to nested stacks.","Array":false,"Type":"aws-properties-stack-parameters","Required":"Conditional (required if the nested stack                                 requires input parameters).","UpdateRequires":"Whether an update causes interruptions\n                                 depends on the resources that are being updated. An update never causes a nested\n                                 stack to be replaced."},"Tags":{"Description":"An arbitrary set of tags (keyâ€“value pairs) to describe this                                 stack.","Array":true,"Type":"aws-properties-resource-tags","Required":"No","UpdateRequires":"No interruption."},"TemplateURL":{"Description":"The URL of a template that specifies the stack that you want to create as a                                 resource. The template must be stored on an Amazon S3 bucket, so the URL must have                                 the                                 form:                                 https://s3.amazonaws.com/.../TemplateName.template","Array":false,"Type":"String","Required":"Yes","UpdateRequires":"Whether an update causes interruptions\n                                 depends on the resources that are being update. An update never causes a nested\n                                 stack to be replaced."},"TimeoutInMinutes":{"Description":"The length of time, in minutes, that AWS CloudFormation waits for the nested stack                                 to reach                                 the CREATE_COMPLETE state. The default is no timeout. When AWS CloudFormation detects that the                                 nested stack has reached the CREATE_COMPLETE state, it marks the nested stack                                 resource as CREATE_COMPLETE in the parent stack and resumes creating the parent                                 stack. If the timeout period expires before the nested stack reaches                                 CREATE_COMPLETE, AWS CloudFormation marks the nested stack as failed and rolls back both the                                 nested stack and parent stack.","Array":false,"Type":"Number","Required":"No","UpdateRequires":"Updates are not supported."}}},"WaitConditionHandle":{"Name":"AWS::CloudFormation::WaitConditionHandle","Properties":{}},"WaitCondition":{"Name":"AWS::CloudFormation::WaitCondition","Properties":{"Count":{"Description":"The number of success signals that AWS CloudFormation must receive before it continues                                 the stack creation process. When the wait condition receives the requisite                                 number of success signals, AWS CloudFormation resumes the creation of the stack. If                                 the                                 wait condition does not receive the specified number of success signals                                 before the Timeout period expires, AWS CloudFormation assumes that the wait condition                                 has                                 failed and rolls the stack back.","Array":false,"Type":"Number","Required":"No","UpdateRequires":"Updates are not supported."},"Handle":{"Description":"A reference to the wait condition handle used to signal this wait                                 condition. Use the Ref intrinsic function to specify an                                 AWS::CloudFormation::WaitConditionHandle resource.Anytime you add a WaitCondition resource during a stack update, you must                                 associate the wait condition with a new WaitConditionHandle resource. Do not                                 reuse an old wait condition handle that has already been defined in the                                 template. If you reuse a wait condition handle, the wait condition might                                 evaluate old signals from a previous create or update stack command.","Array":false,"Type":"String","Required":"Yes","UpdateRequires":"Updates are not supported."},"Timeout":{"Description":"The length of time (in seconds) to wait for the number of signals that the                                 Count property specifies. Timeout is a                                 minimum-bound property, meaning the timeout occurs no sooner than the time                                 you specify, but can occur shortly thereafter. The maximum time that can be                                 specified for this property is 12 hours (43200 seconds).","Array":false,"Type":"String","Required":"Yes","UpdateRequires":"Updates are not supported."}}},"Authentication":{"Name":"AWS::CloudFormation::Authentication","Properties":{"accessKeyId":{"Description":"Specifies the access key ID for S3 authentication.","Array":false,"Type":"String","Required":"Conditional Can be specified only if the type                                 property is set to \"S3\"."},"buckets":{"Description":"A comma-delimited list of Amazon S3 buckets to be associated with the S3                                 authentication credentials.","Array":true,"Type":"String","Required":"Conditional Can be specified only if the type                                 property is set to \"S3\"."},"password":{"Description":"Specifies the password for basic authentication.","Array":false,"Type":"String","Required":"Conditional Can be specified only if the type property is set to                                 \"basic\"."},"secretKey":{"Description":"Specifies the secret key for S3 authentication.","Array":false,"Type":"String","Required":"Conditional Can be specified only if the type                                 property is set to \"S3\"."},"type":{"Description":"Specifies whether the authentication scheme uses a user name and password                                 (\"basic\") or an access key ID and secret key (\"S3\").If you specify \"basic\", specify the username, password, and uris properties.If you specify \"S3\", specify the accessKeyId, secretKey, and buckets (optional) properties.","Array":false,"Type":"String","Required":"Yes"},"uris":{"Description":"A comma-delimited list of URIs to be associated with the basic authentication                                 credentials. The authorization applies to the specified URIs and any more specific                                 URI. For example, if you specify http://www.example.com, the                                 authorization will also apply to http://www.example.com/test.","Array":true,"Type":"String","Required":"Conditional Can be specified only if the type                                 property is set to \"basic\"."},"username":{"Description":"Specifies the user name for basic authentication.","Array":false,"Type":"String","Required":"Conditional Can be specified only if the type property is set to                                 \"basic\"."},"roleName":{"Description":"Describes the role for role-based authentication.ImportantThe EC2 instance must be able to access this role using an instance                                    profile.","Array":false,"Type":"String","Required":"Conditional Can be specified only if the type                                 property is set to \"S3\"."}}},"CustomResource":{"Name":"AWS::CloudFormation::CustomResource","Properties":{"ServiceToken":{"Description":"The service token that was given to the template developer by the service provider                                 to access the service, such as an Amazon SNS topic ARN or Lambda function ARN. The                                 service token must be from the same region in which you are creating the                                 stack.","Array":false,"Type":"String","Required":"Yes","UpdateRequires":"Updates are not supported."}}},"Interface":{"Name":"AWS::CloudFormation::Interface","Properties":{"ParameterGroups":{"Description":"A list of parameter group types, where you specify group names, the parameters                                 in each group, and the order in which the parameters are shown.","Array":false,"Type":"aws-properties-cloudformation-interface-parametergroup","Required":"No","UpdateRequires":"No interruption"},"ParameterLabels":{"Description":"A mapping of parameters and their friendly names that the AWS CloudFormation console                                 shows                                 when a stack is created or updated.","Array":false,"Type":"aws-properties-cloudformation-interface-parameterlabel","Required":"No","UpdateRequires":"No interruption"}}},"Init":{"Name":"AWS::CloudFormation::Init","Properties":{}}},"Models":{"aws-properties-stack-parameters":{"Name":"AWSCloudFormationStackParameters","Properties":{}},"aws-properties-resource-tags":{"Name":"AWSCloudFormationResourceTagsType","Properties":{"Key":{"Description":"The key name of the tag. You can specify a value that is 1 to 127 Unicode characters                                 in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits,                                 whitespace, _, ., /, =, +, and -.","Array":false,"Type":"String","Required":"Yes"},"Value":{"Description":"The value for the tag. You can specify a value that is 1 to 255 Unicode characters                                 in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits,                                 whitespace, _, ., /, =, +, and -.","Array":false,"Type":"String","Required":"Yes"}}},"aws-properties-cloudformation-interface-parametergroup":{"Name":"AWSCloudFormationInterfaceParameterGroup","Properties":{"Label":{"Description":"A name for the parameter group.","Array":false,"Type":"aws-properties-cloudformation-interface-label","Required":"No"},"Parameters":{"Description":"A list of case-sensitive parameter logical IDs to include in the group.                                 Parameters must already be defined in the Parameters section of the                                 template. A parameter can be included in only one parameter group.The console lists the parameters that you don't associate with a parameter                                 group  in alphabetical order in the Other parameters group.","Array":true,"Type":"String","Required":"No"}}},"aws-properties-cloudformation-interface-label":{"Name":"AWSCloudFormationInterfaceLabel","Properties":{"default":{"Description":"The default label that the AWS CloudFormation console uses to name a parameter group                                 or                                 parameter.","Array":false,"Type":"String","Required":"No"}}},"aws-properties-cloudformation-interface-parameterlabel":{"Name":"AWSCloudFormationInterfaceParameterLabel","Properties":{"ParameterLogicalID":{"Description":"A label for a parameter. The label defines a friendly name or description that                                 the AWS CloudFormation console shows on the Specify Parameters page when a                                 stack is created or updated. The                                 ParameterLogicalID key must be the                                 case-sensitive logical ID of a valid parameter that has been declared in the                                 Parameters section of the template.","Array":false,"Type":"aws-properties-cloudformation-interface-label","Required":"No"}}}}}
